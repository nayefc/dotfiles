[user]
        name = Nayef Copty
        email = nayef@hudson-trading.com
[alias]
        hist = log --first-parent --left-right --pretty=format:\"%Cred%h%Creset %C(yellow)%ad%Creset | %s%C(yellow)%d%Creset %C(blue)[%an]%Creset\" --graph --date=short
        ph = push origin HEAD
        pl = pull
        plr = pull --rebase
        su = !git push --set-upstream origin `git rev-parse --abbrev-ref HEAD`
        co = checkout
        g = grep --break --heading --line-number
        st = status -sb
        me = merge --no-edit
        wip = commit -m 'WIP'
        cleanbranches = !git branch -D `git branch --merged | grep -v master`
        diffw = diff --color-words
        isinmaster = !sh -c 'git branch --merged master | grep `git symbolic-ref --short HEAD`' -
        bisinmaster = !sh -c 'git branch --merged master | grep $1' -
        isinbranch = !sh -c 'git branch --merged $1 | grep $2' -
        watch = "!clear; watch --color -n 2 -t 'git status --short; git --no-pager diff --shortstat;'"
        bnuke = !sh -c 'git branch -D $1 && git push origin :$1' -
        tnuke = !sh -c 'git tag -d $1 && git push origin :$1' -
        subinit = submodule update --init --recursive -f
        # Unused
        # gr = remote show origin
        # sr = !git branch --set-upstream `git rev-parse --abbrev-ref HEAD` origin/`git rev-parse --abbrev-ref HEAD`
        # histfu = log --left-right --pretty=format:\"%Cred%h%Creset %C(yellow)%ad%Creset | %s%C(yellow)%d%Creset %C(blue)[%an]%Creset\" --graph --date=short
        # histr = log --pretty=format:\"%Cred%h%Creset %C(yellow)%ad%Creset | %s%C(yellow)%d%Creset %C(blue)[%an]%Creset\" --graph --date=short --all
[push]
        default = simple
[core]
        excludesfile = ~/.gitignore_global
        editor = emacs
[color]
        diff = auto
        status = always
        interactive = auto
        ui = auto
        pager = true
[color]
        ui = always
[color "diff"]
       plain = normal
       meta = yellow bold
       frag = magenta bold
       old = red bold
       new = green bold
       whitespace = red reverse
[color "branch"]
       current = green reverse
       local = blue
       remote = red
[color "status"]
       header = normal
       added = yellow reverse
       changed = red
       untracked = cyan
       nobranch = red
[color "diff-highlight"]
        oldNormal = red bold
        oldHighlight = red bold 52
        newNormal = green bold
        newHighlight = green bold 22
[pager]
        diff = diff-so-fancy | less --tabs=4 -RFX
        show = diff-so-fancy | less --tabs=4 -RFX
        # diff = diff-highlight | less
        # show = diff-highlight | less
[merge]
        conflictstyle = diff3
[diff]
        compactionHeuristic = true

# .. vs. ... note:
# log:
# A..B: all commits in B that are not in A (since the merge base)
# A...B: both commits that A has and B doesn't, and commits that B has and A doesn't, but not on both.
#
# diff:
# A..B: diff the top commits of A and B
# A...B: diff from the common ancestor (git merge-base A B) to master HEAD. i.e: changes that A has since its common ancestor with master.
#
# with .., if you add a function in B and remove a line from A, A..B shows that B added both.